- name: aseguro_directorio_data_nginx_existe
  file: path=/data/nginx/etc state=directory

- name: copio_archivo_configuracion_phpmyadmin_1
  copy: src="files/client_max_body_size.conf" dest="/data/nginx/etc/client_max_body_size.conf"

- name: copio_configuracion_header
  copy: src="files/connection_header.conf" dest="/data/nginx/etc/connection_header.conf"

- name: creo carpeta para  certs TLS self-signed
  file:
    path: /data/nginx/keys/
    state: directory

- name: instalo PyOpenSSL>=0.15
  pip:
    name: PyOpenSSL>=0.15

- name: genero la clave privada para OpenSSL
  openssl_privatekey:
    path: /data/nginx/keys/{{ hostname }}.key

- name: genero solicitud para el certificado ssl
  openssl_csr:
    path: /data/nginx/keys/{{ hostname }}.csr
    privatekey_path: /data/nginx/keys/{{ hostname }}.key
    common_name: "*.{{ hostname }}"

- name: genero certificado Self Signed OpenSSL
  openssl_certificate:
    path: /data/nginx/keys/{{ hostname }}.crt
    csr_path: /data/nginx/keys/{{ hostname }}.csr
    privatekey_path: /data/nginx/keys/{{ hostname }}.key
    provider: selfsigned


- name: copio_configuracion_nginx_por_host
  copy: src="files/vhost.d/" dest="/data/nginx/etc/vhost.d/"

- name: copio_configuracion_nginx_general
  copy: src="files/my_conf.conf" dest="/data/nginx/etc/my_conf.conf"


- name: instalar_nginx_proxy
  docker_container:
    name: "reverse-proxy"
    image: "jwilder/nginx-proxy:alpine"
    state: started
    restart: true
    restart_policy: always
    volumes:
        - "/data/nginx/keys:/etc/nginx/certs"
        - "/var/run/docker.sock:/tmp/docker.sock:ro"
        - "/data/nginx/etc/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf"
        - "/data/nginx/etc/connection_header.conf:/etc/nginx/conf.d/connection_header.conf"
        - "/data/nginx/etc/my_conf.conf:/etc/nginx/conf.d/my_conf.conf"
        - "/data/nginx/etc/vhost.d/:/etc/nginx/vhost.d"
    ports:
    - "80:80"
    - "443:443"
